buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.palantir:jacoco-coverage:0.4.0")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
//apply plugin: 'checkstyle'
apply plugin: "com.palantir.jacoco-coverage"
apply plugin: 'docker'

//group = 'com.epam.labproject'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

//checkstyle {
//
//	showViolations = true
//	toolVersion = '8.7'
//	configFile file("config/checkstyle/checkstyle.xml")
//	maxWarnings = 0
//	maxErrors = 0
//}
//
//checkstyleMain {
//	source ='src/main/java'
//}
//checkstyleTest {
//	source ='src/test/java'
//}

repositories {
	mavenCentral()
}

description = "gradle-springboot"

jar {
	baseName = 'gradle-springboot'
	version =  '1.0'
}

dependencies {
	compile('org.apache.commons:commons-lang3')
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.security:spring-security-core')
    compile("org.webjars:bootstrap:3.0.3")
    compile("org.webjars:jquery:2.0.3-1")
	compile('org.postgresql:postgresql')
	compile('org.hibernate:hibernate-core')
	testCompile('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

task buildDocker (type:Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}